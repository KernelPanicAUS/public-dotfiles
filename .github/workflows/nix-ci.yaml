name: "Test nix-darwin configuration"
on:
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build: # it has to be called build in order for github to recognise it as a status check
    runs-on: macos-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@21a544727d0c62386e78b4befe52d19ad12692e3 # v17
      with:
        extra-conf: |
          accept-flake-config = true
          extra-experimental-features = nix-command flakes

    - name: Enable cached builds
      uses: DeterminateSystems/magic-nix-cache-action@def9f5a5c6a6b8751c0534e8813a5d0ad2635660 # v11

    - name: Check flake inputs
      run: nix flake check

    - name: Build darwin system
      run: |
        nix build .#darwinConfigurations."trv4129-3".system

    # Optional: Check that the flake.lock is up to date
    - name: Check flake.lock
      run: |
        nix flake lock --no-update-lock-file

    # Optional: Show build closure size
    - name: Show closure size
      run: |
        nix path-info -Sh ./result

    # Optional: Cache Nix store between runs
    - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
      with:
        path: /nix
        key: ${{ runner.os }}-nix-${{ hashFiles('flake.lock') }}
        restore-keys: |
          ${{ runner.os }}-nix-
